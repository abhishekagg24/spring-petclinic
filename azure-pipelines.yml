# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: BuildJob
      displayName: Build Maven Project
      steps:
        - task: Maven@3
          displayName: 'Maven Package'
          inputs:
            mavenPomFile: 'pom.xml'
        - task: CopyFiles@2
          displayName: 'Copy Files to artifact staging directory'
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: '**/target/*.?(war|jar)'
            TargetFolder: $(Build.ArtifactStagingDirectory)
        - upload: $(Build.ArtifactStagingDirectory)
          artifact: drop
- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: VMDeploy
      displayName: web
      dependsOn: Build
      condition: succeeded()
      pool:
       vmImage: 'Ubuntu-16.04'
      environment:
        name: guidewirepool
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - script: |
                  # Modify deployment script based on the app type
                  echo "Starting deployment script run"
                  sudo systemctl stop tomcat
                  sudo cp '$(Pipeline.Workspace)/drop/**/target/*.jar'  /opt/tomcat/webapps
                  sudo systemctl start tomcat